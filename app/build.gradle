apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'org.jetbrains.kotlin.kapt'

apply from: "$rootDir/gradle/coverage.gradle"

android {
    compileSdkVersion 27

    defaultConfig {
        applicationId 'net.rafaeltoledo.social'
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName '1.0'

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner 'net.rafaeltoledo.social.setup.SocialAppTestRunner'
    }

    dataBinding.enabled true

    sourceSets {
        final sharedTestDir = 'src/sharedTest/kotlin'

        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += ['src/test/kotlin', sharedTestDir]
        androidTest.java.srcDirs += ['src/androidTest/kotlin', sharedTestDir]
    }

    signingConfigs {
        debug {
            storeFile file("$rootDir/distribution/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        release {
            storeFile file("$rootDir/distribution/release.keystore")
            storePassword System.env.RELEASE_STORE_PASSWORD
            keyAlias System.env.RELEASE_KEY_ALIAS
            keyPassword System.env.RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            buildConfigField 'String', 'GOOGLE_REQUEST_ID_TOKEN', "\"$System.env.GOOGLE_REQUEST_ID_TOKEN_DEVELOPMENT\""

            testCoverageEnabled true

            applicationIdSuffix '.dev'
            signingConfig signingConfigs.debug
        }

        release {
            buildConfigField 'String', 'GOOGLE_REQUEST_ID_TOKEN', "\"$System.env.GOOGLE_REQUEST_ID_TOKEN_RELEASE\""

            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests.includeAndroidResources true
    }
}

kotlin.experimental.coroutines 'enable'

dependencies {
    implementation "com.android.support:appcompat-v7:$versions.supportLibrary"
    implementation "com.android.support:design:$versions.supportLibrary"

    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'

    implementation "android.arch.lifecycle:extensions:$versions.archComponents"
    kapt "android.arch.lifecycle:compiler:$versions.archComponents"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.23.4'

    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.google.firebase:firebase-auth:16.0.2'

    implementation 'com.google.android.gms:play-services-auth:15.0.1'

    implementation "org.koin:koin-android:$versions.koin"
    implementation "org.koin:koin-android-architecture:$versions.koin"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.8'
    testImplementation 'com.google.truth:truth:0.42'
    testImplementation "org.koin:koin-test:$versions.koin"
    testImplementation "io.mockk:mockk:$versions.mockk"
    testImplementation "android.arch.core:core-testing:$versions.archComponents"

    androidTestImplementation "com.android.support.test:runner:$versions.astl"
    androidTestImplementation "com.android.support.test:rules:$versions.astl"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$versions.espresso"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$versions.espresso"
    androidTestImplementation "io.mockk:mockk-android:$versions.mockk"
    androidTestUtil "com.android.support.test:orchestrator:$versions.astl"
}

apply plugin: 'com.google.gms.google-services'
